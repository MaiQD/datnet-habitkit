@using Microsoft.Extensions.Localization
@using HabitKitClone.Resources

<div class="habit-card" role="article" aria-labelledby="habit-title-@Habit.Id">
    <div class="habit-header" @onclick="() => OnEditHabit.InvokeAsync(Habit)">
        <div class="habit-icon" style="background-color: @Habit.Color">
            @Habit.Icon
        </div>
        <div class="habit-info">
            <h3 id="habit-title-@Habit.Id" class="habit-title">@Habit.Title</h3>
            <p class="habit-description">@Habit.Description</p>
        </div>
        <div class="habit-actions">
            <div class="completion-controls" @onclick:stopPropagation="true">
                <button class="completion-button minus-button"
                        aria-label="Decrement completion count"
                        @onclick="() => OnDecrementCompletion.InvokeAsync(Habit)">
                    <i class="fas fa-minus"></i>
                </button>
                <span class="completion-count">@Habit.TodayCount</span>
                <button class="completion-button plus-button"
                        aria-label="Increment completion count"
                        @onclick="() => OnIncrementCompletion.InvokeAsync(Habit)">
                    <i class="fas fa-plus"></i>
                </button>
            </div>
            <div class="edit-indicator">
                <i class="fas fa-chevron-right"></i>
            </div>
        </div>
    </div>
    
    <div class="habit-progress" @onclick:stopPropagation="true">
        <div class="progress-summary">
            <span class="streak-count">@Habit.StreakCount day streak</span>
        </div>
        
        <ContributionChart Data="Habit.ContributionData" 
                          Color="Habit.Color" 
                          HabitId="Habit.Id" />
    </div>
</div>

@code {
    [Parameter] public HabitModel Habit { get; set; } = new();
    [Parameter] public EventCallback<HabitModel> OnIncrementCompletion { get; set; }
    [Parameter] public EventCallback<HabitModel> OnDecrementCompletion { get; set; }
    [Parameter] public EventCallback<HabitModel> OnEditHabit { get; set; }
    [Parameter] public EventCallback<HabitModel> OnDeleteHabit { get; set; }
}
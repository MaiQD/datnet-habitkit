@page "/settings"
@using HabitKitClone.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using HabitKitClone.Data
@inherits BasePage
@inject IStringLocalizer<SharedResource> Localizer
@inject NavigationManager NavigationManager
@inject IUserSettingsService UserSettingsService
@inject UserContextService UserContext
@inject IJSRuntime JSRuntime
@inject SignInManager<ApplicationUser> SignInManager
@attribute [Authorize]
@rendermode InteractiveServer

<PageTitle>@Localizer["Settings"]</PageTitle>

<div class="page-container">
    <!-- Header -->
    <header class="app-header">
        <div class="header-left">
            <button class="icon-button" aria-label="Back" @onclick="NavigateToHome">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="header-center">
            <h1 class="app-title">@Localizer["Settings"]</h1>
        </div>
        <div class="header-right">
            <!-- Empty for balance -->
        </div>
    </header>
    <!-- Settings Sections -->
    <div class="settings-sections">
        <!-- App Section -->
        <div class="settings-section">
            <h4 class="section-title">App</h4>
            <div class="settings-list">
                <div class="settings-item" @onclick="NavigateToGeneral">
                    <div class="settings-item-left">
                        <div class="settings-icon pink">
                            <i class="fas fa-cog"></i>
                        </div>
                        <span class="settings-label">General</span>
                    </div>
                    <i class="fas fa-chevron-right settings-arrow"></i>
                </div>
                
                <div class="settings-item" @onclick="NavigateToReminders">
                    <div class="settings-item-left">
                        <div class="settings-icon blue">
                            <i class="fas fa-bell"></i>
                        </div>
                        <span class="settings-label">Daily Check-In Reminders</span>
                    </div>
                    <i class="fas fa-chevron-right settings-arrow"></i>
                </div>
                
                <div class="settings-item" @onclick="ToggleTheme">
                    <div class="settings-item-left">
                        <div class="settings-icon orange">
                            <i class="fas fa-palette"></i>
                        </div>
                        <span class="settings-label">Theme</span>
                    </div>
                    <div class="settings-toggle">
                        <div class="toggle @(_currentTheme == "dark" ? "active" : "")" @onclick="ToggleTheme" @onclick:stopPropagation="true">
                            <div class="toggle-handle"></div>
                        </div>
                    </div>
                </div>
                
                <div class="settings-item" @onclick="NavigateToArchived">
                    <div class="settings-item-left">
                        <div class="settings-icon green">
                            <i class="fas fa-archive"></i>
                        </div>
                        <span class="settings-label">Archived Habits</span>
                    </div>
                    <i class="fas fa-chevron-right settings-arrow"></i>
                </div>
                
                <div class="settings-item" @onclick="NavigateToImportExport">
                    <div class="settings-item-left">
                        <div class="settings-icon blue">
                            <i class="fas fa-cloud-upload-alt"></i>
                        </div>
                        <span class="settings-label">Data Import/Export</span>
                    </div>
                    <i class="fas fa-chevron-right settings-arrow"></i>
                </div>
                
                <div class="settings-item" @onclick="NavigateToReorder">
                    <div class="settings-item-left">
                        <div class="settings-icon red">
                            <i class="fas fa-sort"></i>
                        </div>
                        <span class="settings-label">Reorder Habits</span>
                    </div>
                    <i class="fas fa-chevron-right settings-arrow"></i>
                </div>
                
                <div class="settings-item" @onclick="Logout">
                    <div class="settings-item-left">
                        <div class="settings-icon red">
                            <i class="fas fa-sign-out-alt"></i>
                        </div>
                        <span class="settings-label">Logout</span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Help Section -->
        <div class="settings-section">
            <h4 class="section-title">Help</h4>
            <div class="settings-list">
                
                <div class="settings-item" @onclick="ShowWhatsNew">
                    <div class="settings-item-left">
                        <div class="settings-icon blue">
                            <i class="fas fa-star"></i>
                        </div>
                        <span class="settings-label">Show What's New</span>
                    </div>
                    <i class="fas fa-chevron-right settings-arrow"></i>
                </div>
                
                <div class="settings-item" @onclick="SendFeedback">
                    <div class="settings-item-left">
                        <div class="settings-icon gray">
                            <i class="fas fa-paper-plane"></i>
                        </div>
                        <span class="settings-label">Send feedback</span>
                    </div>
                    <i class="fas fa-chevron-right settings-arrow"></i>
                </div>
            </div>
        </div>

        <!-- About Section -->
        <div class="settings-section">
            <h4 class="section-title">About</h4>
            <div class="settings-list">
                <div class="settings-item" @onclick="OpenWebsite">
                    <div class="settings-item-left">
                        <div class="settings-icon green">
                            <i class="fas fa-globe"></i>
                        </div>
                        <span class="settings-label">Website</span>
                    </div>
                    <i class="fas fa-chevron-right settings-arrow"></i>
                </div>
                
                <div class="settings-item" @onclick="OpenPrivacyPolicy">
                    <div class="settings-item-left">
                        <div class="settings-icon pink">
                            <i class="fas fa-lock"></i>
                        </div>
                        <span class="settings-label">Privacy Policy</span>
                    </div>
                    <i class="fas fa-chevron-right settings-arrow"></i>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string _currentTheme = "dark";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            // Get current theme for toggle display
            var themeFromCookie = await JSRuntime.InvokeAsync<string>("getCookie", "theme");
            if (!string.IsNullOrEmpty(themeFromCookie))
            {
                _currentTheme = themeFromCookie;
                StateHasChanged();
            }
        }
        
        // Call base implementation for global theme initialization
        await base.OnAfterRenderAsync(firstRender);
    }

    private void NavigateToHome()
    {
        NavigationManager.NavigateTo("/");
    }

    private async Task ToggleTheme()
    {
        _currentTheme = _currentTheme == "dark" ? "light" : "dark";

        await JSRuntime.InvokeVoidAsync("applyTheme", _currentTheme);
        await JSRuntime.InvokeVoidAsync("setCookie", "theme", _currentTheme, 365);

        var userId = await UserContext.GetCurrentUserIdAsync();
        if (!string.IsNullOrEmpty(userId))
        {
            await UserSettingsService.UpdateThemeAsync(userId, _currentTheme);
        }
    }

    private void NavigateToGeneral()
    {
        // TODO: Implement general settings page
        Console.WriteLine("Navigate to General settings");
    }

    private void NavigateToReminders()
    {
        // TODO: Implement reminders settings
        Console.WriteLine("Navigate to Reminders settings");
    }

    private void NavigateToArchived()
    {
        // TODO: Implement archived habits page
        Console.WriteLine("Navigate to Archived habits");
    }

    private void NavigateToImportExport()
    {
        // TODO: Implement import/export page
        Console.WriteLine("Navigate to Import/Export");
    }

    private void NavigateToReorder()
    {
        // TODO: Implement reorder habits page
        Console.WriteLine("Navigate to Reorder habits");
    }

    private void ShowWhatsNew()
    {
        // TODO: Implement what's new modal
        Console.WriteLine("Show what's new");
    }

    private void SendFeedback()
    {
        // TODO: Implement feedback form
        Console.WriteLine("Send feedback");
    }

    private void OpenWebsite()
    {
        // TODO: Open website in browser
        Console.WriteLine("Open website");
    }
    
    private void OpenPrivacyPolicy()
    {
        // TODO: Open privacy policy
        Console.WriteLine("Open privacy policy");
    }

    private async Task Logout()
    {
        await SignInManager.SignOutAsync();
        NavigationManager.NavigateTo("/login", true);
    }
}